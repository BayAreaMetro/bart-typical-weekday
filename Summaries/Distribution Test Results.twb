<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='win' version='9.0' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 9000.15.0318.1720                                -->
  <repository-location id='DistributionTestResults' path='/workbooks' revision='1.1' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='BART Through Time Typical Weekday#csv (BART Through Time Typical Weekday.csv) Extract' inline='true' name='dataengine.42178.509544085646' version='9.0'>
      <connection class='dataengine' dbname='M:\Data\Transit\BART Through Time\BART Through Time Typical Weekday#csv (BART Through Time Typical Weekday.csv).tde' schema='Extract' tablename='Extract'>
        <relation name='Extract' table='[Extract].[Extract]' type='table' />
        <calculations>
          <calculation column='[Calculation_6080729143531184]' formula='[avg_trips]+2*[stdev_trips]' />
          <calculation column='[Calculation_9820729143507198]' formula='max(0,[avg_trips]-2*[stdev_trips])' />
          <calculation column='[Number of Records]' formula='1' />
        </calculations>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Calculation_6080729143531184</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Calculation_6080729143531184]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Calculation_6080729143531184</remote-alias>
            <ordinal>0</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>12956</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>6662.1021960702201</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Calculation_9820729143507198</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Calculation_9820729143507198]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Calculation_9820729143507198</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>12280</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>3219.433887263986</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Records</remote-name>
            <remote-type>16</remote-type>
            <local-name>[Number of Records]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Number of Records</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='integer'>1</statistic>
              <statistic aggregation='Max' datatype='integer'>1</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_trips</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_trips]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>avg_trips</remote-alias>
            <ordinal>3</ordinal>
            <family>BART Through Time Typical Weekday#csv</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>11095</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>3652.4230769230799</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>count_typical</remote-name>
            <remote-type>16</remote-type>
            <local-name>[count_typical]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>count_typical</remote-alias>
            <ordinal>4</ordinal>
            <family>BART Through Time Typical Weekday#csv</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>4</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='integer'>40</statistic>
              <statistic aggregation='Max' datatype='integer'>78</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dest_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[dest_name]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>dest_name</remote-alias>
            <ordinal>5</ordinal>
            <family>BART Through Time Typical Weekday#csv</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>44</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;12th Street Oakland&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;West Oakland&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>max_trips</remote-name>
            <remote-type>2</remote-type>
            <local-name>[max_trips]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>max_trips</remote-alias>
            <ordinal>6</ordinal>
            <family>BART Through Time Typical Weekday#csv</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1629</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='integer'>0</statistic>
              <statistic aggregation='Max' datatype='integer'>7071</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_trips</remote-name>
            <remote-type>4</remote-type>
            <local-name>[median_trips]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>median_trips</remote-alias>
            <ordinal>7</ordinal>
            <family>BART Through Time Typical Weekday#csv</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1993</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>3681.5</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>min_trips</remote-name>
            <remote-type>2</remote-type>
            <local-name>[min_trips]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>min_trips</remote-alias>
            <ordinal>8</ordinal>
            <family>BART Through Time Typical Weekday#csv</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1075</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='integer'>0</statistic>
              <statistic aggregation='Max' datatype='integer'>2800</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>orig_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[orig_name]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>orig_name</remote-alias>
            <ordinal>9</ordinal>
            <family>BART Through Time Typical Weekday#csv</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>44</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='binary' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;12th Street Oakland&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;West Oakland&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stdev_trips</remote-name>
            <remote-type>5</remote-type>
            <local-name>[stdev_trips]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>stdev_trips</remote-alias>
            <ordinal>10</ordinal>
            <family>BART Through Time Typical Weekday#csv</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>12839</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>2299.2754570094698</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sum_trips</remote-name>
            <remote-type>3</remote-type>
            <local-name>[sum_trips]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>sum_trips</remote-alias>
            <ordinal>11</ordinal>
            <family>BART Through Time Typical Weekday#csv</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>9415</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='integer'>0</statistic>
              <statistic aggregation='Max' datatype='integer'>284889</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>2</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>12</ordinal>
            <family>BART Through Time Typical Weekday#csv</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>7</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='integer'>2000</statistic>
              <statistic aggregation='Max' datatype='integer'>2014</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='High Trips' datatype='real' name='[Calculation_6080729143531184]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[avg_trips]+2*[stdev_trips]' scope-isolation='false' />
      </column>
      <column caption='Low Trips' datatype='real' name='[Calculation_9820729143507198]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='max(0,[avg_trips]-2*[stdev_trips])' scope-isolation='false' />
      </column>
      <column caption='Select a Summary' datatype='string' name='[Calculation_9860729164341082]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Parameters].[Parameter 1]' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Average Trips' datatype='real' name='[avg_trips]' role='measure' type='quantitative'>
      </column>
      <column caption='Alighting Station' datatype='string' name='[dest_name]' role='dimension' type='nominal'>
      </column>
      <column caption='Median Trips' datatype='real' name='[median_trips]' role='measure' type='quantitative'>
      </column>
      <column caption='Boarding Station' datatype='string' name='[orig_name]' role='dimension' type='nominal'>
      </column>
      <column aggregation='Sum' caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal'>
      </column>
      <group name='[Action (Alighting Station)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[dest_name]' />
        </groupfilter>
      </group>
      <group name='[Action (Boarding Station)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[orig_name]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-hidden-fields='true' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='distribution-test-results' inline='true' name='textscan.42178.447656192133' version='9.0'>
      <connection class='textscan' directory='M:/Data/Transit/BART Through Time' filename='distribution-test-results.csv' password='' server=''>
        <relation name='distribution-test-results#csv' table='[distribution-test-results#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='actual_year' ordinal='0' />
            <column datatype='integer' name='expected_year' ordinal='1' />
            <column datatype='string' name='boarding_station_name' ordinal='2' />
            <column datatype='real' name='x_squared' ordinal='3' />
            <column datatype='integer' name='df' ordinal='4' />
            <column datatype='real' name='p_value' ordinal='5' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false'>
        </refresh>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>actual_year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[actual_year]</local-name>
            <parent-name>[distribution-test-results#csv]</parent-name>
            <remote-alias>actual_year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>expected_year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[expected_year]</local-name>
            <parent-name>[distribution-test-results#csv]</parent-name>
            <remote-alias>expected_year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>boarding_station_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[boarding_station_name]</local-name>
            <parent-name>[distribution-test-results#csv]</parent-name>
            <remote-alias>boarding_station_name</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>x_squared</remote-name>
            <remote-type>5</remote-type>
            <local-name>[x_squared]</local-name>
            <parent-name>[distribution-test-results#csv]</parent-name>
            <remote-alias>x_squared</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>df</remote-name>
            <remote-type>20</remote-type>
            <local-name>[df]</local-name>
            <parent-name>[distribution-test-results#csv]</parent-name>
            <remote-alias>df</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>p_value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[p_value]</local-name>
            <parent-name>[distribution-test-results#csv]</parent-name>
            <remote-alias>p_value</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[distribution-test-results#csv]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Entry' datatype='string' name='[Calculation_3080623104800315]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[boarding_station_name]+&quot; | &quot;+str([actual_year])+&quot; | &quot;+str([expected_year])' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Sum' caption='Actual Year' datatype='integer' name='[actual_year]' role='dimension' type='ordinal'>
      </column>
      <column caption='Boarding Station Name' datatype='string' name='[boarding_station_name]' role='dimension' type='nominal'>
      </column>
      <column caption='Df' datatype='integer' name='[df]' role='measure' type='quantitative'>
      </column>
      <column aggregation='Sum' caption='Expected Year' datatype='integer' name='[expected_year]' role='dimension' type='ordinal'>
      </column>
      <column caption='P Value' datatype='real' name='[p_value]' role='measure' type='quantitative'>
      </column>
      <column caption='X Squared' datatype='real' name='[x_squared]' role='measure' type='quantitative'>
      </column>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='M:\Data\Transit\BART Through Time\distribution-test-results.tde' schema='Extract' tablename='Extract' update-time='07/08/2015 08:20:01 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Calculation_3080623104800315]' formula='[boarding_station_name]+&quot; | &quot;+str([actual_year])+&quot; | &quot;+str([expected_year])' />
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='924' timestamp-start='2015-07-08 20:20:01.038' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Calculation_3080623104800315</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Calculation_3080623104800315]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_3080623104800315</remote-alias>
              <ordinal>0</ordinal>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>924</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;12th Street Oakland | 2000 | 2005&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;West Oakland | 2013 | 2014&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>1</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>actual_year</remote-name>
              <remote-type>2</remote-type>
              <local-name>[actual_year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>actual_year</remote-alias>
              <ordinal>2</ordinal>
              <family>distribution-test-results#csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>2000</statistic>
                <statistic aggregation='Max' datatype='integer'>2013</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>boarding_station_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[boarding_station_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>boarding_station_name</remote-alias>
              <ordinal>3</ordinal>
              <family>distribution-test-results#csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>44</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;12th Street Oakland&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;West Oakland&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>df</remote-name>
              <remote-type>16</remote-type>
              <local-name>[df]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>df</remote-alias>
              <ordinal>4</ordinal>
              <family>distribution-test-results#csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>17</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>26</statistic>
                <statistic aggregation='Max' datatype='integer'>43</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>expected_year</remote-name>
              <remote-type>2</remote-type>
              <local-name>[expected_year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>expected_year</remote-alias>
              <ordinal>5</ordinal>
              <family>distribution-test-results#csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>2005</statistic>
                <statistic aggregation='Max' datatype='integer'>2014</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>p_value</remote-name>
              <remote-type>5</remote-type>
              <local-name>[p_value]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>p_value</remote-alias>
              <ordinal>6</ordinal>
              <family>distribution-test-results#csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>886</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>5.612926381679707e-191</statistic>
                <statistic aggregation='Max' datatype='real'>0.99999999999992395</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>x_squared</remote-name>
              <remote-type>5</remote-type>
              <local-name>[x_squared]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>x_squared</remote-alias>
              <ordinal>7</ordinal>
              <family>distribution-test-results#csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>886</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>3.81147206021727</statistic>
                <statistic aggregation='Max' datatype='real'>1028.14264205475</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='boardings'>
      <table>
        <view>
          <datasources>
            <datasource caption='BART Through Time Typical Weekday#csv (BART Through Time Typical Weekday.csv) Extract' name='dataengine.42178.509544085646' />
          </datasources>
          <datasource-dependencies datasource='dataengine.42178.509544085646'>
            <column caption='Median Trips' datatype='real' name='[median_trips]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[orig_name]' derivation='None' name='[none:orig_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Boarding Station' datatype='string' name='[orig_name]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[median_trips]' derivation='Sum' name='[sum:median_trips:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal'>
            </column>
          </datasource-dependencies>
          <sort class='computed' column='[dataengine.42178.509544085646].[none:orig_name:nk]' direction='DESC' using='[dataengine.42178.509544085646].[sum:median_trips:qk]'>
            <groupfilter function='member' level='[none:year:ok]' member='2014' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </sort>
          <filter class='categorical' column='[dataengine.42178.509544085646].[none:year:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:year:ok]' member='2010' />
              <groupfilter function='member' level='[none:year:ok]' member='2014' />
            </groupfilter>
          </filter>
          <slices>
            <column>[dataengine.42178.509544085646].[none:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[dataengine.42178.509544085646].[none:year:ok]' value='116' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='text-format' field='[dataengine.42178.509544085646].[sum:median_trips:qk]' value='n#,##0;-#,##0' />
            <format attr='height' field='[dataengine.42178.509544085646].[none:orig_name:nk]' value='27' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[dataengine.42178.509544085646].[none:year:ok]' value='48' />
            <format attr='width' field='[dataengine.42178.509544085646].[none:orig_name:nk]' value='184' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='11' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[dataengine.42178.509544085646].[sum:median_trips:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true'>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[dataengine.42178.509544085646].[none:orig_name:nk]</rows>
        <cols>[dataengine.42178.509544085646].[none:year:ok]</cols>
        <percentages enabled='true' mode='column' />
      </table>
    </worksheet>
    <worksheet name='least similar'>
      <table>
        <view>
          <datasources>
            <datasource caption='BART Through Time Typical Weekday#csv (BART Through Time Typical Weekday.csv) Extract' name='dataengine.42178.509544085646' />
          </datasources>
          <datasource-dependencies datasource='dataengine.42178.509544085646'>
            <column caption='Alighting Station' datatype='string' name='[dest_name]' role='dimension' type='nominal'>
            </column>
            <column caption='Median Trips' datatype='real' name='[median_trips]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[dest_name]' derivation='None' name='[none:dest_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[orig_name]' derivation='None' name='[none:orig_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Boarding Station' datatype='string' name='[orig_name]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[median_trips]' derivation='Sum' name='[pcto:sum:median_trips:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column aggregation='Sum' caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal'>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[dataengine.42178.509544085646].[none:orig_name:nk]'>
            <groupfilter function='member' level='[none:orig_name:nk]' member='&quot;Powell&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[dataengine.42178.509544085646].[none:year:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:year:ok]' member='2010' />
              <groupfilter function='member' level='[none:year:ok]' member='2014' />
            </groupfilter>
          </filter>
          <slices>
            <column>[dataengine.42178.509544085646].[none:orig_name:nk]</column>
            <column>[dataengine.42178.509544085646].[none:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[dataengine.42178.509544085646].[none:dest_name:nk]' value='31' />
            <format attr='width' field='[dataengine.42178.509544085646].[none:year:ok]' value='116' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='text-format' field='[dataengine.42178.509544085646].[pcto:sum:median_trips:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[dataengine.42178.509544085646].[none:year:ok]' value='48' />
            <format attr='width' field='[dataengine.42178.509544085646].[none:orig_name:nk]' value='120' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='11' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[dataengine.42178.509544085646].[pcto:sum:median_trips:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true'>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([dataengine.42178.509544085646].[none:orig_name:nk] / [dataengine.42178.509544085646].[none:dest_name:nk])</rows>
        <cols>[dataengine.42178.509544085646].[none:year:ok]</cols>
        <percentages enabled='true' mode='column' />
      </table>
    </worksheet>
    <worksheet name='most similar'>
      <table>
        <view>
          <datasources>
            <datasource caption='BART Through Time Typical Weekday#csv (BART Through Time Typical Weekday.csv) Extract' name='dataengine.42178.509544085646' />
          </datasources>
          <datasource-dependencies datasource='dataengine.42178.509544085646'>
            <column caption='Alighting Station' datatype='string' name='[dest_name]' role='dimension' type='nominal'>
            </column>
            <column caption='Median Trips' datatype='real' name='[median_trips]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[dest_name]' derivation='None' name='[none:dest_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[orig_name]' derivation='None' name='[none:orig_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Boarding Station' datatype='string' name='[orig_name]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[median_trips]' derivation='Sum' name='[pcto:sum:median_trips:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column aggregation='Sum' caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal'>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[dataengine.42178.509544085646].[none:orig_name:nk]'>
            <groupfilter function='member' level='[none:orig_name:nk]' member='&quot;El Cerrito Plaza&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[dataengine.42178.509544085646].[none:year:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:year:ok]' member='2010' />
              <groupfilter function='member' level='[none:year:ok]' member='2014' />
            </groupfilter>
          </filter>
          <slices>
            <column>[dataengine.42178.509544085646].[none:orig_name:nk]</column>
            <column>[dataengine.42178.509544085646].[none:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[dataengine.42178.509544085646].[none:dest_name:nk]' value='31' />
            <format attr='width' field='[dataengine.42178.509544085646].[none:year:ok]' value='116' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='text-format' field='[dataengine.42178.509544085646].[pcto:sum:median_trips:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[dataengine.42178.509544085646].[none:year:ok]' value='48' />
            <format attr='width' field='[dataengine.42178.509544085646].[none:orig_name:nk]' value='120' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='11' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[dataengine.42178.509544085646].[pcto:sum:median_trips:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true'>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([dataengine.42178.509544085646].[none:orig_name:nk] / [dataengine.42178.509544085646].[none:dest_name:nk])</rows>
        <cols>[dataengine.42178.509544085646].[none:year:ok]</cols>
        <percentages enabled='true' mode='column' />
      </table>
    </worksheet>
    <worksheet name='table'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Open Sans' fontsize='20' italic='true'>Distribution Changes from </run>
            <run fontname='Open Sans' fontsize='20' italic='true'>&lt;[textscan.42178.447656192133].[none:actual_year:ok]&gt;</run>
            <run bold='false' fontname='Open Sans' fontsize='20' italic='true'> to </run>
            <run fontname='Open Sans' fontsize='20' italic='true'>&lt;[textscan.42178.447656192133].[none:expected_year:ok]&gt;</run>
            <run bold='false' fontname='Open Sans' fontsize='20' italic='true'> by Boarding Station</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='distribution-test-results' name='textscan.42178.447656192133' />
          </datasources>
          <datasource-dependencies datasource='textscan.42178.447656192133'>
            <column aggregation='Sum' caption='Actual Year' datatype='integer' name='[actual_year]' role='dimension' type='ordinal'>
            </column>
            <column caption='Boarding Station Name' datatype='string' name='[boarding_station_name]' role='dimension' type='nominal'>
            </column>
            <column caption='Df' datatype='integer' name='[df]' role='measure' type='quantitative'>
            </column>
            <column aggregation='Sum' caption='Expected Year' datatype='integer' name='[expected_year]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[actual_year]' derivation='None' name='[none:actual_year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[boarding_station_name]' derivation='None' name='[none:boarding_station_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[expected_year]' derivation='None' name='[none:expected_year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[x_squared]' derivation='None' name='[none:x_squared:qk]' pivot='key' type='quantitative' />
            <column caption='P Value' datatype='real' name='[p_value]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[df]' derivation='Sum' name='[sum:df:qk]' pivot='key' type='quantitative' />
            <column-instance column='[p_value]' derivation='Sum' name='[sum:p_value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[x_squared]' derivation='Sum' name='[sum:x_squared:qk]' pivot='key' type='quantitative' />
            <column caption='X Squared' datatype='real' name='[x_squared]' role='measure' type='quantitative'>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42178.447656192133].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42178.447656192133].[sum:x_squared:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42178.447656192133].[sum:p_value:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42178.447656192133].[sum:df:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[textscan.42178.447656192133].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[textscan.42178.447656192133].[sum:x_squared:qk]&quot;</bucket>
              <bucket>&quot;[textscan.42178.447656192133].[sum:p_value:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[textscan.42178.447656192133].[none:actual_year:ok]'>
            <groupfilter function='member' level='[none:actual_year:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[textscan.42178.447656192133].[none:boarding_station_name:nk]' direction='DESC' using='[textscan.42178.447656192133].[sum:p_value:qk]'>
          </sort>
          <filter class='categorical' column='[textscan.42178.447656192133].[none:expected_year:ok]'>
            <groupfilter function='member' level='[none:expected_year:ok]' member='2014' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[textscan.42178.447656192133].[none:x_squared:qk]' included-values='in-range'>
            <min>3.81147206021727</min>
            <max>1028.14264205475</max>
          </filter>
          <slices>
            <column>[textscan.42178.447656192133].[:Measure Names]</column>
            <column>[textscan.42178.447656192133].[none:x_squared:qk]</column>
            <column>[textscan.42178.447656192133].[none:actual_year:ok]</column>
            <column>[textscan.42178.447656192133].[none:expected_year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[textscan.42178.447656192133].[:Measure Names]' value='124' />
            <format attr='height' field='[textscan.42178.447656192133].[none:boarding_station_name:nk]' value='35' />
            <format attr='text-format' field='[textscan.42178.447656192133].[sum:p_value:qk]' value='n#,##0.000;-#,##0.000' />
            <format attr='text-format' field='[textscan.42178.447656192133].[sum:x_squared:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[textscan.42178.447656192133].[sum:df:qk]' value='n#,##0;-#,##0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[textscan.42178.447656192133].[:Measure Names]' value='72' />
            <format attr='width' field='[textscan.42178.447656192133].[none:boarding_station_name:nk]' value='184' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='11' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.42178.447656192133].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.42178.447656192133].[none:boarding_station_name:nk]</rows>
        <cols>[textscan.42178.447656192133].[:Measure Names]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='table'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
          <strip size='160'>
            <card mode='radiolist' param='[textscan.42178.447656192133].[none:actual_year:ok]' show-all='false' type='filter' />
            <card mode='radiolist' param='[textscan.42178.447656192133].[none:expected_year:ok]' show-all='false' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='77'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[textscan.42178.447656192133].[none:Calculation_3080623104800315:nk]</field>
          <field>[textscan.42178.447656192133].[none:actual_year:ok]</field>
          <field>[textscan.42178.447656192133].[none:actual_year:qk]</field>
          <field>[textscan.42178.447656192133].[none:boarding_station_name:nk]</field>
          <field>[textscan.42178.447656192133].[none:expected_year:ok]</field>
          <field>[textscan.42178.447656192133].[none:x_squared:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='most similar'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[dataengine.42178.509544085646].[none:dest_name:nk]</field>
          <field>[dataengine.42178.509544085646].[none:orig_name:nk]</field>
          <field>[dataengine.42178.509544085646].[none:year:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='least similar'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[dataengine.42178.509544085646].[none:dest_name:nk]</field>
          <field>[dataengine.42178.509544085646].[none:orig_name:nk]</field>
          <field>[dataengine.42178.509544085646].[none:year:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='1' name='boardings'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[dataengine.42178.509544085646].[none:dest_name:nk]</field>
          <field>[dataengine.42178.509544085646].[none:orig_name:nk]</field>
          <field>[dataengine.42178.509544085646].[none:year:ok]</field>
        </color-one-way>
      </highlight>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='table' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='most similar' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='least similar' width='192'>
      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
      iPcAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='boardings' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nOy9Z3gc53W/fc9WbEHvvXcSJEACYBPYqyTS6lLkIjc5cXfyd7rf2InjxI5j
      K7ZkW7IsWc2yrE6xgwQbSABE7733stiC7WXm/QCIFi2RshLJkIW9r4sfFnxm5pnZOfuU8zvn
      CJIkSfjxswIRBEGQLXcn/PhZTvwG4GdF4zcAPysavwH4WdH4DcDPtYgu6mtqMDm8SJLEaGcD
      gzMLy92rDwy/Afi5FpmaYGGekxebcFunKK/qJipMj8u+wNTkFF5RxOt2MD01ycycEZ/ow2Ka
      Z2Z6Fo+43J1/7wj+bVA/f4jkc3L4uecw+WDdvnvICXZx7MR5IuJicGsSiHb0Me3TMtXVSs6e
      A1Q++zRFuw5QULgGvWK5e//H498G9fOOCPIA9m5fw7wymfxYPZbZYfoGJ5mbmcM4O0doVBTu
      BTMOmwWLzY0iLI5NxX9eL/+b+A3AzzsSEKBBp9MiAGptEMFRsezat5/cjATOnqkkp3gdYVo5
      IiCXyZe7u/9r/FMgP++MbYa6ESfrc5OQJJHJ/jYau0YoLtuJb6aHuu5JoiKCCIvPxDI9wbp1
      a5a7x+8ZQRAEvwH4WbH41wB+Vjx+A/CzovEbgJ8Vjd8A/Kxo/AbgZ0XjNwA/Kxq/AfhZ0fgN
      wM+Kxm8AflY0f4byJT//W8wTHTz0458zuiDjk1/5O+Ksjfzk16+jjl3D33/zCwQLDl587Af4
      Vt3H/VtTeO4n3+d81wxbb/88f7GnCJmwDJ2W3JT/5lFePNdMwqqdfO0zu/ntwz+kdtDKxz77
      NW4uSWes7QI/e7mKv/nbfyBCIzE3UMt//Pxlvvat7+OeH+VCVcM1p/zY/m2EhQYD/hFgRTEx
      0E36jk/xlY+tobq2jvMXGrjjK99iXeAYV3rmOPG7x6jqmAAJ7GNtXDFH8v3vfJW+i+UYPcvT
      Z9FmoMOg4l9/8O8wVElzcyNTqtX86zfu4UzFeeYH6njsuSPY3IvBCKLXxkvPv4aLxc+zBiNV
      dS3X/LM5nFfP7zeAFUTultu4Y1McF+oG2bxuFWZRIjI4hIjIMExmKyV772Xv+nQA7NYFgsPD
      0eki0KhMvOWd+ZMi08fyta98jumGsyjSthIts6AIjyQ2IhyrzYYuMoPPfPY+QhQAIg0nf4dq
      1T6SAheP1wSoiY2KIDYqgi995m5++aNvkRgX/fvzL8td+VkW3NYZfv2zR4kvu5eNudHoBTBY
      zMwbjAQHBxIVHX11mqPR6rAYjdjtBpzuIALUy9VrkbYLr/FyrYnPf/pj6PV6vPMGpueN6LRa
      AoLCCNW92TkzJ49dpvniG3QOTHLsXDVymQy1WoVarUIuf7ts278GWEHUn36ZC829BI08wsT0
      XezcVMAvHvl3lOE5/G1m2DVtdYl5rAk4yj/+68OU7v8kYarl6bPLMMSzvzvMhF3Jd789zF9+
      9etEOH7Etx+6zN77v/gHrYP40r/9Jw6bmV89+jBlJWuYH+mmu2+Ipx/5t3c8v18OvYLweT14
      fYtzY5lcgUIu4PV4QSZHIZchCODzepGExc+iz4vXJ6JQKJEtywoYJFHE4/UgSSAIAgqlEsnn
      wydKKJQKZIKAJIl4vT4UCiWCAJIk4fV6kSuUDI2MU1Xbwv137n/buf3xAH5WNP54AD8rHr8B
      +FnR+A3Az4rGbwB+VjR+A/CzovEbgJ8VzTWOMI/Hg8vlWq6++PHzJ+caA5DJZCiVyuXqix8/
      f3L8jjA/Kxa/I8zPiue6YriFuX5e/O1x7Euf8zfdzPai1Hds21Z5GEfMRoozIt+XTjnmxzhZ
      1c6+vXsJ8Mv13jOi10XLlUuMzDkp2FRGvM7HqePH8Cl0JOWVsDYjBgDDcCsVV3pQq7WU7tiF
      rb+WlsFZAqNSuKm0AJUMpnoaGJPFsT4zdpnvSsJuHKO6Y54dmxfzkBr66+hxx7Mxd7Fvo521
      NPZO4nXZECJy2L06nMrqZoTAWLbfVMREZx0t/ZMERqdzU3E+cINdIJdtjsERO8VbtrBlyxYy
      4kOYHB5gcGiArt4hFkwzdHT2YPcsJk7t7huko70Ti8OLz+Ogv7uDts5e7G4fs+NDDPT3Mzg+
      i808S0dbG+NzFiTRy/hQL21t7cxZnIg+N4M9nfT1D9Dc3olHlJgc6qGjux+HR2TBMMnAwABd
      faO4nAv0dLbTNzyJT/TP4t6K3TSOkUj2lGVw+mQ1DssYNlUqBw8evPryA4z195O6bisHD+4n
      UuPlUlM/ew/swzXRzpTZicc2y5HX3mBo1rKMd7OIJLk5e+R1mvvHAfDYpjl6+CiD07/vW2Ju
      MbfeeithcieJyUn09/SSU7KdkPkmWsas9Iya2L1vP46eOkasiwEON/x9NU718NLzBmTA/k98
      hZFjv6TDEYjPMElIYiq2ySHW3/FlAoH6CyeZCHDijC7m87sSKT99mbGhfvIPPIi+5yUqhkQ2
      3XQTM80XWFDoMZu9PPil+7lcfpqR8RHE+A3cluXm8aPNxIbIMbpDmeuq5NHflhOmVxCzdj+r
      5R08drSDNRvLaD3dRLtBgc86z6Y7/op961NYHr3ihw99RBplOguXTr9OUGwh1vFRRsZmeeP1
      WdLWbiAvORJB8jA2MY7JcInxDg2byrJw+8LRqNREByiZdSzQU3GagtJSRpb7hoCeqtMo0tcR
      NmQEyc2lMxfJW1dIzx9UpfEYuum0xfBgWjjytJ3MjXZxfNjBob161u/bg+S1Y5Pk6BWLsQE3
      NIColHV85mt3owG0Og0jqLnplnuh8VnMGbeQaaqgyWghECjecxf3rIVv/P2L2PZlEp+chtcy
      wbxpAT1ySvfeyd50kR82BfE3X/k6MpcFRBfhMQnIZQ7qDUb6eybZdPCT7Eyw8dBvz9PT2sTo
      6AgGFUx7GkkvVZNetIsHDhXw39+5yKf/8d+xNb7I4fo29q5LQfBbwFVkKg0Fm7bT88p5Qj55
      O1/MVxDgneKZN+rJStyHUlCw47ZPoQzQMdN2mqr2ScAHgCQIGHuqqRkykWWaZVjuZGFdNoHL
      FRRjHeWlM63k5iUyODhPc72amu5p0iO8DDndWDZnE7S0edleU8XqzXfxZuhLYEQCe0pTqGke
      4mOlidSeKydx/XYiNYsH3NAAFgzDVJw6hRKISs0FBORyOZJMhlarQWb5fYRN7ZnXcLSANiuV
      3rMnuDKlQGtzEiiKIJOh0+nQhqrR2md5/jdPM9LZxdZtRRy71E12JPjEUBKT4nnm5CvMhnox
      OfQkpaURm7zAmpxkEnOL0c5VoQvUo1QGER0m8btnnsAz1UPmns/5f/3fwvxIE+faHezalI5K
      pWSs9QLDUjrroh2ERkWDz40XkQsnjpC+ZR8Os5uEpCwc3e1MzM4yaHayZfMtbL9JgaH1POdt
      ceiXKSAGAF0Cf/cP/w+nZRSzs53VRdvIX7sVS/c5nNPx6OU+3B4JlVJB57Cd/Qf0gJdzh18h
      au0OApVy5F6REy88jjtuCzuSQvEtzZqvuw3qtM5QV9PKm26xkLhUgjwmNPFZSHO9+MIy0dvH
      mBPCCXSOY3ArMc3Nk1e8AZ3HQH1LL1GxUTjEAEIkI0J4BkmReszTQzR1DBKVlk9WjJamhga0
      YbEYbW5KVqfRVl+HVx2MIJNRsCqXwdZaxhckVq8tQjAPM+MJISc1CrfVQENjK8rQRNbmpaFY
      poCNDyWSyEhPK/1TC6wqKiFcC13NdRg8WtYVrsY2cJFBZTEFUQ4aG9vQRKdRkJWIaaKf5u4R
      olLyyEuLQQCc8xNMenSkRgcv913hdVsZGDWSlZ4IgNs0wYhDR6LGQmW7kZ2bC+js7CQ3NxcA
      j91EY2Mzoj6O9XlxNFyuZsELoGB16UaiA9X+gJiViHGwC1dsDjEBy92T9wfXgpFxi5u0+Oh3
      b/wW/BFhflY0fkeYnxXPNYtgn8+Hx7NMGZD8+FkG/COAnxWN3wD8rGiu6wdwO0z0dA0SkphB
      QoSG3tZWvPoYclOXWxPi592RMEwMMz7vJCM7C41cYnyoF4uoITM1CaVcANHLYF8XJtvilDc6
      OQutZ47BiXlkaj05Wemo5QKmuQkUwfHL6wdYwudxMDm7QEJcFAAeq4FZVwBx4brFBpKP0f5u
      FiQ9WRlJ4Fqgr28ArzKYnKwURIeJ3r5hgmKSSYgMAW4wAizM9fH4Qz/hpVNX8FpH+dmP/4dn
      jl5610563SaOv/Qa8/64mmXDNjfI2ZputBg4draJ2f466vpM2MdaqemaWGolEBIWSXRUCC3V
      l7F6JFqrzuPTRxMdEYZcJjDeW8svH32cyYVlvR1gMdlV+8XDvHS2cekPbs689GsqOyautpno
      uEzjqAP3RAuX28dpqT7LnCcAc89F6geNVJ+tQNSF0VJ5ljmHG3gXT3BYeAKGmX76W6yEJKXi
      Aoxj7Tz++LOMmrzsueezFGpG+OlrtcgWZtHmbGNHxBS/O1JDt0/HGtkgr1/uJyUujNQtt7NK
      Pcyvnz+KTR7KJx78PIPlz9I8ucCCXU5RXgS1TSPc+8W/IcHVxaNPv4I3MIWvfuXznHnux3SP
      W9FHxRCWWMgndsTx8K/O85d//TkC357uccWjCU3i4C1JOKZbcfTaCU8t5uZUGf1XTmF0LX7x
      yOSERkTj7LiIPmszGREB1E8a0GtbUaWtJioSrB41Bdnxy3szS1gn22ifDyBCCUgSvbXnITTu
      mjZRWaXsz5EzVDvFlGMB65yT4uJMwqOsPNc2SIzLS1hUJBM+F+4lAeUN1wCaiFhCbfOU1zSS
      k58HiNSUHyNh6/3857ce4MJvX2bW5UauT+Jv/+6vMPZ2k7FjJ6mRmdxVlsnZjnm++S//Qmqg
      D7dtnuPl1dzy4N/z9TvW8sJr5bidLtbsvo+d2QqcERu4tyyVzu5uKo6fRhOfTahvnNNVnbgc
      bsru/ku+8cAhpnra6GyoIzAz3//yXweZXIHMvUBb7yQqlYSgUOEyTzI860Dmc3NVPCu5qW8Z
      obgoG0EQWLVhO/t27cbWe4XBeTvZ+avRKD8ED9lj4fUTjZSsz8DtcmKa7qVm0EVWXAguhx3v
      kiBOoVThNo7TP+tEgROPV0RAQJAJeDxe9IFqGi5UYJYCUC4Jx268CJYHkp2mprbFRG5mNCAQ
      oA3AOD3O8NAEglaHUoDAqBhC9DoCZDIEmQq5zMm8xYFKcjM6Msz8ggtkcjRKganxUUYn59Dp
      dIAcnV6LWq0iMioSjSYABBmaADVymZyknCJyk8JApSYyNAR1aBKrQsy8cKaVdYWrPtiH/meM
      ZbqPlmErm7buxjczwFBPAxPOIHZuW8/UyNhVA/DZ5rGgJyJIgyQ5MS24kQmgkMnwiuKNL/Kn
      xCeRnZ/F2MAg8/MGzB4lWYlhDI1OYpyZwrXU1ZHWK0wRzrayzUwPjxESKGfB7sAwZyA0WM+w
      0ce+/fvIifQwNP0ucmhlQBCpqXHkrU5nvTOFlIhQMpMESm7axMzrRzhWKXLf5+4jShwiNU4J
      8gAys1IJUIWTmxNJ15CBVUmBnDhWQZxahaAK5NbbD/LG0QpGlOE8cOcu+i96CAzUIMSmoAsO
      IFCIJ16KYn3BxzAfLmfGrKEsLoK55DSCNEpATlFRLucmx8hPDPxTPPo/S3QhMbg7L3NipI3c
      TTuJi1ZwqaqSflRs3FyMaaieuYA8UrQQl5yERg5IGiJ1Lk6eOElITBZpYXoAQqPi0C53mHhA
      MMWlG3DbZ/EpRkhOTCU5MRX7WCAKUxgK+xR1Q1ZWJSVwsfoCvYKCjVvKCHaNcOHSKXyinJ37
      szD12yg/cQKVLomNiYsL52ukEO+rI8xr5YVHf8qVYTMyhYZPffEbrEoI+j+d0mme5uiLz+FO
      3cV9Owven36uQEz9DcyFrSEj9EMwvXkfcFtm6ZqyU5CV/J6O02g0wgdnAIDX7cTmcCFTqNBr
      Nf9nvb7odWO1OdHoAxe38vz8r/B5PAgK5fLU/PoAkEQRnySheIcCGDfiAzcAP34+zGg0GuGa
      NYAgCCgU/ih0PysHvxzaz4rFL4f2s+LxG4CfFc11J/yGkVq+/U8P41ArEVRBfPYb/8CGzPee
      +Krp+JPUeVaRYa3BkLSbO7Zk/5867OfdsRtHOXzkHEqlhCphPTuy1bxy7BIymUDRjkPkxgeB
      JNJec5rWURtabRBbd5bRW3mUQauEXBnG/l1FHH/xFUSVkuDk9ewqzVq+xAOSm5MvvYBVrsXh
      DeBjh7ZRdfwYNkGBIiiZm7cXIQDSwiAPPX6S9PR4UvKLCXePUtU5inlull13forp2iP0miUs
      Fi9/8fG7gBuMAJIkEpO1lZ88/hif253JmYt12IwTHH7hGX79m1eZmLdReeJ3DMxYqDn1Kpc7
      xhhpqeR8Qw9XzrzOE0/9hp5xI6LPh08UEUUfPv9y40+C6BPYtOcQd9x9iPH2Jjw+ObsO3sm2
      wiR6BsYWG3nsdPQY2Hf7baxP8FHTOUXnmImDBw+isI1gNFjILzvALXu2MzHQvpQwZZnwuUhc
      s5U7bjtEjHyO8eExpnxh3HzrrRj6GllSN2GcGCcis4DSDZvITQ6ipr6T1es2sXvbZjxWI/3z
      cNfdd7ExWUn/nAN4FzHc7HAjP/kvA+aZKTbeto1Tv3uKMU0OKfIJHnn2KHujZ6isrmOi8hTe
      DIFUex3q9HWcPXOFgoxwnnnhdfanfdBPx88foo9IQI/EcPM54vPWEhKTgnx2iNcvt5NW9jEk
      QFCoiA5X0d7cjqNvAHNMMilhKl579VVcUijBEbHEKGycfvFV1MFZCBIs2xCgCCQvS4/NMIpB
      DGVDQiyB9Vc48vorKKIyedNRbXW60ckV9Hc30yqpMRrmGRkdQmYYIiC9FLvXiwpQq73MWhZN
      +oZrgKDIVPYfPMjnvvw33FycwqzFQf7aYkoL8zEZ58hfX0jj+ePIovIQZhqoHdWSHuTG5rBj
      skuEhegQP0yakpWC5GOguYq6CQV7NuVgmhnDq43nnrv30dXQvCgeE+SkZucSqlURFBxKSJCH
      PoOWO2+7nXS1le6RISYMErvvvBO1oZNZ+7te9QNlYXaE4+U13LR3L57pXnyR+Rw6dAc6Yzcz
      S9J7fWQmO7dvYn1RIROjfYRFxbG+uJRtRWm0944TIJPhBtxuGRrt4qt/wxFArQ0hMzsbLYAk
      Ura5mCee/C9elVTsu/uzBMfHECU9SdL6T6Bo/R2+6DXkFKwm73Qd4xPTFK+6CbXPzPKOnyuP
      6Z5qHn/hNCVbNnCpto2CaJHT5+sI0UBaziosE724A5MwTgzQMSuikAWyKysNcbCd02dOY/Fq
      KQtScu70ccLCg5FFphOqWcYbcszw8H8/TFzJVtobainISkRhqef0mVncQUloPfP0T7kJdE9S
      Xt1MqE5G9tpthLtHqDxzEt+CgS1bbsHQMMxrr72B2eDljs2LN3RdP4AoevF4RFRq1dWRT5JE
      3C4XIjLUS3/3uBelDvg8+AQ5KoUcr8eNxyuiUqsRRC8+5MgkL5JMgVLx0dCffJgRvR6c7iWP
      vkyORq3C43LiW/reHKN19AoFrIlX4HS5kStUKBWLleHdbg9ypQqlQoHP68LtFVGp1Cjky7hh
      KPpwuFxIEiAIqNUBSD43bo8PpToAmWOO2j4zG9Zk4HI53/J+SosVjwQ5arUKyevB5fYgUyhR
      KZXIZP68QCsS69wc8vAINB8RLZDH6cDm8RESqH9Px/kTY/lZ0QiCcK0WSJIk/6LVz4riGgMQ
      RdGvBvWzovBLIfysaPwG4GdFc30/gCQyPdRJxYVq7IKeHfv2E+Ydp7LDxt5d6685sOPyMZzR
      JRSlR7zjqRbmRjlTXsGsQ8b6m3awJiMO2Y3CwyQRq82ORqtD/lEJW/oTI/nc1F6+Qk7pBnSS
      g9rqGkxuBUWlG4gKWsyLPj/azvm6PtRqDeu3bsfaU0XzqBVtcBg3lRTQUXeZqQU3qbnryEuN
      XsYiJCIDLVfoHDUQEptOyeoU2mqrmDDaSMwppiB9MS2612mmqrIKOzpKNm9Ebh7ibFUbSrWK
      1Rt2IE630zYwRWBUKpvWLdYQuO4IYDeO8PTTLxOWtppUvZXfvFKBqFCh06qZGenHaPPgdZjo
      G5pEodGiVsoRPQ76ujroH568WoED0cHzj/4CZ2ga+Ul6Dr9yBLPTh3l2nI7Obkw2F3bzDCOj
      4/R2dTA+a2aqv4GHf/4YPaMGHOZZOjo6mTHZ8DkX6BscpL+7G6vLv1i/Lj4nNWdPcOLcFZyi
      hGGgmfmAZDZmBXOpvos3v5rxgUGSC7dw4MAeorQyBvpGKN19gL1bN4B5FHNAEnvLimm5VIlj
      Oe/HY6F70sOevbuwDtTR0z+IRRHD3j07aDx36moRl5mhLnSp61gbJ1HZOMDMcD8RuRs4cOAA
      cXqR/nEzO/bswdnfyOi7FckzjffiDstj25YSVL4CiuwSzvEarjTNo5gzMKguoVTTzanpGHI9
      tVjTUzBceZ6zvQ5kbhu77n2QjdkxYBmhyxzOd/behF7ykF/iQued5AcPP44+LBiCUtmWKfDk
      a/Wkx2uYWAhj34ZghoeH6Bno40LVCez6UNwE8fEDa/npT54iM6+A2+7PRL9cNas+7AgK8kq2
      Mz1lAkAbFsVCWwc1M14iU0oW20geJiYnMM1XM9kVwIYtmxkZH8d14Tjt2gi2bFjHzhgZDsMw
      aPQsa2IIZQj7996Ez2PF4ZURlZRNvlaGzzaFLyDoat/ickoJNU5x4mg3cRvymGqrYmjcialf
      zbqynezYtQPJa8cqytEvRT5e1wAEuRzJs5hESfA5mTa4WCySI1BQvIFTz9UiKgbZcNt+LJdq
      ACetTYPc8fXvkaFxISmW3k65HJnPjccHAh5mZ43YbZ30jo6jN8zhDrBQEJNHXHYpn72vkJ98
      /9fEZZQRGTfOtnQNf/30CBr9HA63mtHSNGThqXz+cw+gWk7P5IcdmYKgoMCrQe8zY8NEpuWT
      F7LApd5xxFWJyFFQdvB+lGotcx1nqe2e5p7PfQmNTkfjydfpM2SRHyZQXnGFrbsPLq8BsKhC
      qD1zkqSSXURoZUhuC0ePnGfvrbddM41R6UPZsHkD51rbuG3PnZSqNcgmG/hNTTcf35FN/cUK
      EovKiNC8iwFEpBQQ4bnAk08+g8w0xLQqh8/sWowH0MTkkiP7DXW2dO5N0nPpEkAAaenhHHn+
      adSWMbJ2f5ybS9JBn8qWbJFf/uxxolRWuqZlfP2zu4iLjiOvII+wmFQiVJNoNDpkMjkyGajU
      AQiOeWrHnGTHRRORV0BoWDSpEUEEaLXIZYK/IuQfjYQkiijUKlRqFT6vHZ/HjSSIXCo/TuqG
      XTjNHmISlRx5/Th7Du7FLqiI8Bp59BdvsO22+whRSYgSy5dFQnRy+NePoy3cx8ZoPU7TJM8/
      /wrr995JiNyHT/Th80oM1Z1iOng1OUFKVEqB2nMniVxdRqDBTEJMLOUvP4UndiNlCcHvXCTv
      D7NCuG1GWlvbcQo61hatQbBN0zfpYlVuCvMj3cz4QshLjWaivwVPYCoJwRIN9c3I9NGsXpWJ
      aumJiV4nHc2NGF1yclYVEBkUwPRwJ93DBpKzVxMqmBizKMlOCaGjpYeMVbkMtjchBiWRpHfT
      3D1MZHI26RFKmgdmKVqVdeNFtB8ARvp7iUxORy146WltwuBSsmbNapwjVQwr17Eq0kFzSyea
      qBTy0+Oxzo7S0j1CXEY+UUorjR0DiBKodKEUFhYQsFwyLqeJy3WteHwiKAJIS4piZGAEL6BQ
      BbM6L4KGTjPbSjLpaGrE5Atg7doClF4LLc1tSIFxrM2KpvlKLdalInl560tIigjyp0VZiZiG
      e3BHZxH1ESmS514wMbHgJmUpbfofiz8vkJ8VjUaj8WeF8LOyuWYE8AtD/awkZDLZ2zPD+fGz
      kvBPgfysaG5sAJKXwc5uFjxeJNHH+EAnjS2d2Fzeq00cxkm6R2be8XC3dZ7mxnq6BiZ4v4QL
      ottGZ0sjDU2tzC+5s9+Kz2Wjq7cPz9JGr8s6R3f/+B9/fbeVlq5+RPHPfzo4MzGOyyci+lz0
      d7TQ3N6L0/sHT0J0MzIyjtdnp7Wujrq6OurqmpmemaChfvFzY2sHjg/B3ohrwcCMaTE63zQ9
      TENjCxbnWwLOJS+DXW20dg7gERe333s7WmjtGUECPA4LbU0NDIzP8eZs//p5gUQfXTWn+MH3
      f86Y1YVx8Ao//vkzHHv5KZ47VstIxyWOV3Yw21vDC+X173AGN0ee+gVvVFTyxCM/pHHYROfl
      Y1S2T7xD23fGYx7nyReP//4PXivPPfJf/O74eS6dPc5///hRJizXVuPzLkzxmxdfw+pafDDm
      8TZeeO0CXv5IrJM8+tzreP+cDUDyMdB0gf95+GmMbi/9dRV0zIpg7OV0TTdvvbPhtos88cIJ
      vKKSqLg4IoIU1NTUISl1xMbGEcgCVQ09LPd2ycLMIE/8/GHq+mfxmMc4eraBYL3Ia29UXG0z
      UH+WDoMPvcxCVX0nDedPMedRY+w4w+WeWc4eOwZBodSVH2V84V20QNa5AS7WdROgXKyP6RN0
      3P6JzxJiqudkWxc/O3WRCU8Ad918E4ahdv7p60dR5+3inz9/aMlJJWJdMIMukS/8zccJFab4
      3q+eYVpVzcLORM7U9BIQkc2mNC9vnG4gtfRWvnZ/GS/+7Edc7Daw/Y5Po+x7lRMXhpAHxfDJ
      vYXMD7XSaA7lu//0ZQJkXl77xQ+oahtA23uCVys7CE8t5Csf3wPAYO1RHq6b5769qQDMDdTz
      yE+fYNYh42Of/QaBg29wssPM/OQYxYce5LaCAH780KO4FHoWfGEf1Pf4p0F041JFk5+6qM5N
      LdpBqlzFwpCHjp7fl3x0GIepGzAQHagDQUl0bAwNpy+TX7aH6NBgCNHTcPowu25+YPmcYEuY
      TDZKitcyDSgCY7nrjlvwWkax2QevtpkcmiF5+ybiVDbO1hxHL/oIRYcUkk9JlAk9oRkAACAA
      SURBVJcXDXbU/V0kFJQSpVuU6lzXrgOjMvn85+4nTLdoABGpq0nXGXmloo99t93B/rLVbL71
      M6yJ16DUxvG3//gV5trbWLj68xLAHZ/7EonSKN/7l/+PdpOezYWZHPrEA8RoZASmb+GbD5Rx
      4UI9OWvWMnbpNS5XX+ZMl4W1q1I5d/o4xZt3EJi1iU/uLQTA5bSj0uhQyWXIZCpCQ7UsWD1s
      3H8Pn/vUXXhmOpg2u3DNdvOTXx5m/733ELQkYgmJz+UzD36BzdmhtHUP4HE7iczbxj//1e20
      tLXRXnWWqI338A9fuIOAP/cM8XINuXnZaFQyQEChVCO5TFxqGGbLhoLFNII+F+fLz5GSn4/g
      deJ0e/E5zbSP2SnKTUQAvOYBRkgmK2L5PWaJWauIXCpWLMjkqHDS1NxLYIAax9KsbvXmdbSV
      H+PUmUqMVhcLVgfpazdSGDrPkZo+7DYvhTftRhqvo2vSBryHRbBttpeHH3mazE07CJaLqNVq
      Fowz2FwiQVExBOu1qN8iUJNcJk6UV5K/43a25oTSPzyDOkCJcXYGt08kKioalUqNWqVEodRQ
      vH0XUYEBqBUy1EGRbN1YQqBOg+i0MmO0AhCRkIFirotTl5vobK7ifIuBVfECP/jPhzBLAbx5
      eSEgikP7izl3uvJqSqL6E0/zwrkutJrfV3yOiY0lKDAQQRDQaLWYZiYZGBnH6/toSa3txnHe
      eP04qSU7SAxZfJklSSAxIwvH9BjzxjnmzA5splEISiFo6QdgorudhLwPXykqu2GEy22TbNi2
      i0DnOOal9YnNYiFvwy7KNmaTkphFQlwMWrUKjUaDT1QRlxhNgFJGgFqBZ2ktdOPfOpmK9JxM
      dEo5E509BIRH01d7BrfDx878QsQjNRgz1pCeEAjyALJz0q6eUFAFkpsSwbGjr6IKyeGODXk4
      emdpq2xHLIwmSRVKQHAcd95+MycuNqPNWE/qqlLu2TVCddckq1LXEBgbQ2n0Rep7JthfmoUy
      JIkvPXgfrxwpp9WnouyOT7ImK5m50kxam3tYU1SKUqUkb00Ru27dheuFFzGK60hPgbS8DGp7
      KhBSs4lWawjTpSIP1SLXhpCTGk/e5lzaRl7kSreevOz0j4TYLjouAbUchtrrmbL6UDRVYp7P
      I10/j0GzivyijcACDquGpKhAnGOQnJVy9Xg3arKTY5at/39IQHAEEYIGTXAgCstFjhztIWrt
      doJdE9R0WCnMTKb+VAWj2lDKtm1GuTBG9fnjuFBzcPtmbKMtnDp2FGVgGmUJiylU/GlRViDG
      3jpmwwvJCvtoJClzm2don7RRmJP6no7z5wVaofiL5C3iNwA/K5q3JcYSRRGv94/eMffj588e
      f2Y4PysavxbIz4rGbwB+VjTX9QPMj9Xz799+FGeACgE5mz72af5i19rrtLbw2LcfZevXv0h2
      iO5t/7vQf4nvn5zmu1+8/f3qt58bIUm4rLM8+8xhDn7mU0So5Zgme3j1ZAt3f+Ju9AoAiaHW
      Kur7ZvH5ZOy+ZS895w8zYhVQBcazf1cprz75MIGx6egjUthUkvcuTqMPFtHrpvrECzgSt7Ej
      L4QTbxzDJUhoYorYuzELgLHuBlr6JrFMD2AMyqcsUcmwwcJoZwOJZfcTNNvAtEeBw63itkN7
      gRsYgCRJRCSv477PH8LRe4lnmnrxlWVQdbacgXmJ7Xv2Ik00Udc/g1yjxe7x4nGaOPLKCQrK
      9mAbrOVKxwQFW3aRIUmL4ZZOMxfLTzFuU7F77zbaq85RUHYLho6z2CPWUpgWsYzZxz5C+OxU
      XarF7vEsqSDnqapuxCPKeUsALEODo6zbejvmhpcZmHYRmlZIcWo0r790DKsjA6sYybZ16wkM
      CVvWlx+gr/Eio0Y3IfHgdXvJLtlOcpSGp54/BksGkJBdRHymmxefeprb928lWicnyzLKr2fd
      7CpMYHgINmekcuHF55lwLIoobzgFMoy389Qvf8kLJ6+gVyjoaazgcGUn7vl+nnn1DHMjXVzp
      miYtJR6FzMWRX/+MSWUSQZ4Rnn+xHJ9o49knXsC2pKzsrHyD000jOKfbeP74FezTQ7T0dHP2
      bB0aXYD/5X+/UOjYtu9mUiIWR2OVNoIDt+wlVPuW7D6SjLi4CGoqjtA8LpEQEUBWWiLN1Rcw
      C3rUTivqED3jowOcO3cJxzKXucoq3smmvEQAlLpQ0qI1XCo/hjo8+ZoKXKb+GrzxJUTrFn0C
      rdVV5G/agkqhIjMjDZdpnBl5KHHadxHDAUSnFvPNb32Lf/zmZzC1NTM8M4fdbsPqVRGiUwIC
      6flFrM5OQo4TQa7DYjTitJkwL9iZNzlJigrCvtRDs9GA3WrBhp5grZLCdXlUnzyOWRtDUpj2
      fX9ofm6A10FX/zy7Dh1i++pwmrqHGR4zULh5H1kaGz0mie3byihaV4jCOonp7aEXy4bbZmLC
      5OOmA3cSNN/O7FsU8a2NPRQW5y1+kBz0TnnISwgFJKyGEU6da2Dj1q3olIsGckMDmOyp5J//
      3//jH77zC+I2bqJ0/SYS9SLjEzMkJCaBIKBUvDk4BnPwgQcJmb7MgDOGopxIJsfHUUYlELrU
      JHf9TUQonUxMzpGcnExU6mpkpn7isgvRKvzr8T8Vxok+puwyEuOCqDlbQeOQhdS4SHqbLlJ+
      9iwzQhBJIWqqz5VTUXERWXQWER+i3yeZ5KG+soKKs+cRI9PRe+YZGJkGYNgskvLmC2cz4lKF
      oFEr8DotPPf44xhc0NNcx4x1sbrwddOiSKIPl8u9FDwhoFSpkMsEvB43XlFCpVKD6EVEhlIh
      w+1yI1ctFiKTZApkkg+3x4tCqUIhk3B7JVRKBR63G58koVapcS9M8/OHf8XeT3+ZvLjgP+Uz
      XBF4PR5kCsVifIYk4fF6USiU2Mca6BdWsTpOjsvtRpApUCkVSKIPt9uLXKlEoZDj87jx+BaL
      5H0YsnSLvsX3TSEX8Hk8uL0iSpUKwWmgYcBC8ep03G43KtWS4lcS8XhFFEoFvFngUQIQUKnV
      6HXaZcwLJProbqnFpopmTW4q8uV/visGm8GAPCycgI/IM/c4Hdi9IsH6t+9A3gh/Yiw/KxqN
      RiO8bXdLJvPPxf2sHPxqUD8rFkEQljvW34+f5cVvAH5WNNeXQvjcNF48SXXHBOt23EJJdhyi
      x8rJV4+TtWMfaWEB2Bw+3NMdXBhTcNvWNX94BqZ6G3jjdBXamBwO3bKDANGJS1KiC/gj641I
      IuYFG8FBgQC454d55sUjxK/ZxZ7CON545QVsugyKEwVGvAnsLE6//rnc87zwUiU333ML+hVQ
      XUbyuai+UEXe5i0EqxR4HEZqartZt3kDGjmAhHlmhNr6NlyKELZv28BIyyV6xuYJS8qjIF7N
      xSvNeD0eFjwKbj10iOBlLEklSRIT3XUY1KkUJAfTXneZvikz2UVl5CSEAOCxzVJxtgqnT2D1
      hu3EKExUXmnCpw5jW9kGjIOtNHSNEpWSS1F+GnCDEcAy08vh8kYykoJ58vnXAImumlO8eLiC
      WYuZipee4Fe/O8Xk+BAt3UMMdHcyNmt+i9bEwRu/eQFlfB6+mQ56hic4/NRPef54NTOTI/T3
      99PdN8qCZZb2tlam5q1IkoRxepTWtk5MdjejLWf57kO/YmzWDIDXbqSppZFTZ6tYMI5Ree4S
      LZ39CCot2gAlHoeFrvZWOvtG8PhE7KYZWltbGBidQUROYJAeGWAzzdDe2srotBFJ8jLY3cXo
      6CAd3QM4PR+BeAifk8vlRzlaUYPDJ+FxGjn52ktcrO/kzcRwks/JhYqLZG/aTZrOytDsLAOT
      PvYd2M90RxV2dQw333wra1NC0EQkoVfd+JIfNCOtl3j58EnG5m14FmaZcOrYt2cLF06duNqm
      v/4ymoxSthWnU1PTQOOVKhIKtpCpmKCyfZxz1W1s27cfxWwHg4bFsn/XHQF0YSl88WtfxtR3
      nujoaByGIU7VDpGbHAteG22tnQxKRgyx6Ux2N3HU3EKnJZQff+dLqAUBUJOeFc9Lp0+w6+Ad
      JIdKnOjqxTgbSou3jRcrhyktKcU93YJZ1LNgU/CVL97KY//zSzShwRCWxVr9KBMjA/SMzpEQ
      uegoU8VmEWroorldjyohG60cZgdaafJ4cbcf4USXkcTYOJS33cWlJ7/HMKnEJSRz2941XDhX
      zfqyfJ770Q9xBUVjnLPyya9+gdd++n1IWY1xZJA9n/079qxJ+GC/zQ8aQcGqjbuZmjICIFfq
      KNu9D/OxqqtNRJeT8elphMvluFwC29ZGkHfLdnxOI27UqFUKRNHJhZp+Dnx6+7L7aSJSVnFg
      q4UeQBkcx+5NwVw5exxFWNLVNrOTC0QUBKJRqnAutBGTE0lTQzW+eTMFu/XMslhrzDI3hGVu
      0RN83RFAodbinGzimfJ+HrhnH+ff+B1WmQ6b3URn3xyrc1PIK9lNariKyNRC/vIvP4nGauH3
      khE5W+/8Al/++F4ajj3DmTYTuWlxlG7fRbhWRVbxXu7clUt3Wxc9XV0MdlVTU91M+9Ao3d29
      NDQ0kpa9Ck18LjuK3jK1kQWSniTj9WP1ZOekvkVAJyMpJ4+wAJF50wIul4fctaXIXSbMZitu
      36IgyT3dw6Aym7/+xjfYmqmgsXsCmULDbQ98lb3r4zBalrUg6PuDTEFw8O+L5MnkKoIC365l
      0ARFs23PfkqTZFS1jSF5XVw6c4acTTsJCZDjmmzHFb2acPXyTxl1QSFXS24BIA8gp3gbAXOd
      GJZcV3KFgLiUE1YmiIyMz5G9ai3rc2LoGzOzu6yQi+WnmXfKUSkXz3XdO7PO9PDIz55FHazn
      clU9iXnFrE4JR5RERJ+PoKAg+lsvM2Z0o9RoUMpl12QZkFwGfvK9f6OieQS9TotcriIoWEtL
      TRVGpwedTo9GH0FKWgrrSjdzy+2foLQom5T4RDaVbeO+O24mPioc39wg1e0j1/RtdW4OMwsO
      MpPi33JBEZcH4hNTkVuHaewZwSupSU5NYq6vhcFpCwDKiGTCja08/uSTnO9cIDctGpkQgEaj
      QLEC1gYAXo8LUaklOSqQ6VkTU3NWIsPUvPT4wzii15ARoUWUJAZ7uknPyV3u7r4N+3QPvz18
      HkmQo1CrkUteXG4PiWnR9HcMMjnUhjY8BUmSUCiUqJVy3C4HVZfqyCwsIkAfQ2bc4g/Cdf0A
      1tlhalv7F7VAugi2l6xGEHz0NrUTnJ5NkG+eK60DJCfGMu9WU5gWypX6PtaWFKBayiplNYzT
      1N6DMjCGwjW52GcGaembIzlWh0MRSU5yJJaZEZo7BghNyiI/NYapoS66h+dIzVtDUoSaxuor
      6BLzyE6MwGsz0NA3Q0FyMPVds6zKjWNoxEhsMMyLoaSECzQ1teELCKNobT7u+VGaOgcJjEyi
      ICuGpsY+Vq9fjXNulJbOIaJScslMCqXtSgOpRaVYR1pw6JJJi/lo6JKGe3uISs1Ao5CBz0X/
      4ARJaamYes4xqCqmMMZDU2MLivBkVqcGUXWpEQ+AXEtRSRGemQFkkTmEf0iEcNbZMYxCCIkR
      OqYGO+ganidrzTrCBQOV7SZ2bsigqa4ei1fF2vXr0YgWmhpb8GqiKFmbg8s0QUNLH4m5a0mK
      CkLmT4uyMjEOdeGOySF6+VN+vi+4FoyMW9ykxUe/p+P8eYH8rGj8nmA/K55rtkH9alA/Kw3/
      COBnReM3AD8rmut6gt0OI10dA3gAQaYkLTuXEO21Gh7T9AgWgtB45vDq4ogNfS/7ZSLTQ32M
      GRZAEIiMTyUxKvQ6eflFpoYGkIXFExWkeQ/XWNnMTk4QFBWDEi9Dvd1YRQ1ZWWkELMVfe102
      ent6UYXGkRYfidtuoqd3mODYFBKjQ5jo72DK5EATFEV2ZiLLnUzdtWDAImqJDFYzOzbI2KyV
      5Mxcwq7qNEQmBnqYtQtk5WSh8Frp6+3HqwwmNzsVn91IT98I4QlpxIYv6suuOwIszPXz/NMv
      Ud/cTM3ZN3j4+RNvazNYf4aKhgFaL7zKlZ53rhR5fUTqyl/naMUlGq5c5Cc/+jnTzuvpcHzU
      nnqd5mHDe7zGCkXyMdhSySOPPY/Z42Ww4RzdBpCZBzhb17sU5y3SfLkCqzyYkYYLDM5bOXn0
      FPqwYKrPnmTO6qDiQg3x8fFEhQcv+1RhYXaIZx5/jMaBOaxTvVTUDRARpuHI4RNXCyBOtFXS
      POlB5RyjvLKN1qoK5n1aFvoqqes3cKG8HLQ6Ks+UXy2ieMN8RwqlhrDwcDxeIw5tIJapLn72
      8K8YM3vYfveDpL2l7ZVjT1HxnJHNt3+GA6v0PPHoE/TOONhw4F5uKwrlof95lAmzh623f4Y7
      thcsPVAVxTtvYXtWAD/+lx8wNTfL68/+lNZxM6u23sbBHImHnq8gQB1KaphApHmCh/7zGbbe
      +yCFKeEfxHP+aCC68aijyU8JBwSS124jRa5kYdhNV791qZGE2+0mNCQCr8yD1TLCtEVGYHcP
      6QUlhCrmMRldNDW1kl1YwnI/bYvZwfr1BUwD2sh0br8lA4XMi2ivulr1sqtrFHWsxIhZycbi
      JGpPdVJckkF45ALPtk9w74GPgc9OW7XzahXQGxq2IJMToNEQGBbKRGszvtBk7n3g02xfm0R3
      Z/815TYzNxzke3/3SaqOnKLq4inU+Qf4wXe+RMfRN5jXxnP/A59mx7oU+joH31Ky1Mnrj/+I
      v//WD9EX7iMvLoxb/+IBDu1cx2hf52LhNn0a//TPXyFC7eHY808gpGxkTfKfeRXHDxq5hqzs
      zKtTHYVShegyU908ysbi/EX9lCSh1enpbqhk3CZH43Oz4BLYuH0HCz11DM362HJgP3t3baKj
      8gxG1w2v+IETn5FL+NIUXCZXoJBJtF84SWbZft6cmLudFvSxeWxZk8Dpiot4vSICAoJMwOvz
      olLJGO7pQaZQ4vD8ESOAWhtCRmYmCpua85cv03HpMBVtbtaGq8B2bVvD9BhDozLkWi16rRbL
      yCSDQx58ag0T9Uc5Vr9AcYwa7BJIsPgtBHDbF77J3jXJAJgGqvifp6rZUxqLsHSB0MiIpeJ7
      AuvK9jDZXceUbTNx+j8ypsAPDtMEp05XkrVhN/HBS+5fr4vh8QVuuv127G2naZkTSYwORiGT
      oVLIsNnM2F06EGQoZPBhKpsseuxUnz2JPSSfXVlRV/8eGR2PTh+ATOEBUUZwoByL3YE0ZyA8
      JJWqS1co3LARu2GYScOiGvS6BqAMCCJM7+DIyy+DTMm+++8iL8ZDW/spnOoEEgMDCYpQEy8L
      IiwglajJBU5XzXH3x+9mbZycufkjnDg/xaEH/oKccBeNTcewKJJIT9AjiRLIBaISU5AF/n5R
      q41MZVVcLRMmORnpiaj0YWQkiYBAVGIG8TllbIhX0tkzRlzRe6sHtRKJiotHJYPhziZmbD6U
      LVVYjDmk6ozMB+RSvD6bK+UnENR6Nm4swBzYSPmJk2ijMslNy6CxqpITp3qJX11K+IdANrFY
      JC8Ay8wQHUPzRMf1curMPCXFKfQOWlmzaRNVVZcZ8MLGzTcR6BzhwqVyfJKcnftTMPfPc+bk
      CbRB6WxIXEyh4k+LsgIx9TcwF7aWjNDlXtq+P7gts3RN2SnISn5Px/nzAq1QfF4vglzxkSqS
      J0oS8vdYJO8d8wL5+egjV3y0vnZBJvtf+yiueRKCIKBU+heXflYO1xiAPyucn5WG/433s6Lx
      G4CfFY3829/+9rff6T8kScI218/3/vGHxGzcgN4xyUP/8V2eeukkEZlriVTZ6R+34Og7y8Pl
      Q5StzfiDM4jUHnua7/7wEc5Ud5C/rgTBPMqkVSBE/8dtKks+F62d/URHRQDgGG/ma3/9TToX
      QihJ0/Ef//R1jjbOE2LvpLzLw9qs2OufzDHJd//9CQq2FBPwUZ/qSRLOhRke//nTJK5Zi2To
      49nfHqGz5QrzsiiSo4MRJJGeugqOX7hCfWs/WTmZqGQCoy0V/PbiEOuyw3j+yWfo6e+msd9I
      flbysu4a+bwuLr3+NF2OcJL1Tl5+8RW6ezpoHXGQlxGPAEgLAzz0sxeYnZ3EpQhGnOng6Nlq
      WhqbCU/JpOHki9S0dVPb1EdWdgbf++6/fue62wFO8zhP/fIJRubtSBJ0VVegzNnNFzO0COI8
      j/3XYwwRx22bkrEbDbzy3FNo04vZW5qLIAiAnfqqVrbd+yUytVac88M897P/whSxgXu3p9I7
      akBUhFOUqeFiVRupa7dSVpRCa2U5tb1zlO7Yi7XxJR450ccXvvRVytakIkkS6tBwxtrbmNmo
      w2BXoZP5CI5KIkUMwTDaybHyi0j6OG65eQ/mvhpO13QSnryK/Tdlk5efiRKJvqaLXKjtIjZ7
      PTs25VDx0isQpGXaJLHv5gPEBH8IvD7/F3x2Ll2swe7xIiEx0tPBqu2HKI608Fx5L77ViSgQ
      CQhN4vY7t1H18rOM2TwkMcf56m7kEVk4x3uQpW7kjm3pvPHCa8y7IXIZM8P11Z1nxOghNEnC
      45Mo2XELybHBPPXor3BSggYwTkwQkbma/7+9Mw1v67rv9HvvxUIQ3EkQ3BdxJ0VRlEhRq0VJ
      lizJlmu7SeM06TR2nbXNNHEzk3Ymz6TPJPN0nEwmzTh1msWJ13iPbFm7rJ3aSHEDCS7gLoI7
      CRIAsV/gzgdIsmxHsv3EiVQJ7zdc3HtxDs45957lf36/VbUlJKckc+7gKarXb0c79A7tAzaW
      lK3irqIlHH/peazuDzHJU+kS+YsvPEJ+cgwA83M2BltP8OJrexiY9GBMiSc5PY94ncT85CSJ
      KTG88fKbuK+uKui5+/6ttOz+BW+eNCFo9SQnxJCRm4d7oo+GDit56Vpeev4l3MEQe579Bd09
      rfzq1WMo/nme/+3rRCekoI5JJseYcDVdYuIS8oQhTp3rIKWkHJ0Ac6O9dA9P0XJ0P32zPmJ1
      GnxyiEO7X8ChRKNTC8i+RRovtOGY6+eXz+0ju7gE0+Hf0tAzRkvDEaZ8MdgtZzhjHvtjleGf
      DpWeLffeT35qeLXT4XSi1WgR1Wr8rsVwWIOgIqewiKme83TbZBLEIGePN1C5bgNREjicDjRa
      DYgiouLFe5M9wkpWb2NDZVgEKzohjbyMJGwDzWjzlnMllmDRFyBWFWKor4OTFzrJyUyj8cRB
      jpvnKMszUFJUgG/eypSUSNaHmeSptXoMSe/Kg8TExlK67n6+cP8qertGSUtPIjk9j4QoCWPh
      MjZuWEWCyNVANyXgwRuVyd//4z+Rq4xyyjSGMSWejJxcdGqJoqWrqMg34LQ7sM0tkJlrZH5i
      CofHw/xiAGNyAsb0dFTvawCgprjAwOGTJsoLc645LrL6vs+wviwdS2sDF3vGePCRb1AQH6Tx
      xDEGpsO6QCGXDU90JnV1dRSm65iddyGp49lw991UFqUiB28DacT3ERsTg8/nQ5FlVFG6cFcm
      JGMduURmxTp21RhpbOvEOufB0n6R/u5eFlHj8/ogFCIkaNDcZGnE9xJivLeJwyY7D9xde/Vo
      TEoB9fVrWFm9nPFLnXT2jrJl50M8vLmUUxctOGdH2H+0ifWbN6PXfASTvGspX13P7PnXeOq1
      81TXLSPdaKTp8G/pnPAgiOIHbyQKDDQe4V/+5QlMUwJLi/IwGFM49OpLjDm9qFRqohMzWVtb
      wcz4KB5VKhU1dazKj8U6aiXOkE5yajqa8WZePdbxnltXVJSDKoa8TMO7B5UQg+Ym3jl+ipGZ
      RWL1atpPv8Pxs03MeyH6siCvNq2CutR5/tu3/oHmBSMblmUiICGKwm1q0yqQXVhM+/G3eWPP
      UbKLinCMWZhwBJgeMrF//0Gah91UVCzjrx97hB1bNlBYVkJB6TK8ljPsfXs/Dl3mLRELdIX5
      S+089cxbaFQy585cxO6ao394Atk1xcF9Bzh26iyllWvJz0ml6fQRjrZZKc2O5tmfPcWsF7pb
      LjD1+0zyPoASwu8PoNJoEAA54CeoCGg0agQliM8vh83UFAGtSsTnl8PfXd7WFQrK+AMBBEFC
      o9GghAL4AyFUkoAiSKhV0uVzZERJhVolEZQDyMEQKnXYlM/v8yGq1KhVUtjETQ6iUYn4AiE0
      aglZDiGJEERELYLPHwBBRKNRQygY/n1RhUYt4b+cPiUUNvCTVGpUkkjA70el0RKS/SiiCvVt
      ohB3xSRPAAJ+HyFFQKPV4Bm9SJ+wjKpMFX5/ACQVGpWEIAgooRByKIRapUIO+AjICmqN5pZQ
      zbtikicSrpcKIAgiKtnOxQE7q5cV4vf7CCFerqPhPQ+KIKHVSB8wyVNJYkQX6E5kcXYWKTkF
      3W3yygt4PbjkIAkxMR/ruogwVoQ7GkEQ3hsMpygKodDtNwiMEOF6vKcBhEKhSDh0hDuKmz+y
      iRDhJhJpABHuaG64MyLod3Bo91Gq79tJkuLg4Nv7cKgM7NyxlUQduDxBAjM9NFhV3L+h8n1X
      K0z1t7H/eCM6YzG7dmxE+wea5IHCnNXC4XdO4wyqWbGmnurSHKRrglQCzmn2nWph69Zt6DUi
      jskeTrTb2XlP3Y0zewXXFC8caefhXXffElN/nwQB1zznzzfik2KprllJcowWgn5aLjQwueDF
      OT9Hybp7WZ6XhHN6iNZLXu6qKQNFYbKvlXExgxWFaTc1D4qiMGFpwabNozwrmrYL55hYcJNV
      UkPV5bTJXjtnT5/FjZ5V62uZMF1kZM6J2zFHevkGxNku5r0KC3M26rZ/CrjBGyDgtbP/5Wd4
      89BZHIEg5pN76XPFEO8b5sCpFo7vfo7ndh9lcmwUc/8IQ309jL3PJG//q79Dk1mGMtdD36UJ
      9r/477x2uImZyVEGBwexDFhZdMzSZTZfNclbmLZi7urB7vZj7TzJD596lrGZ8Cqu7JzgFz9/
      Fn3OUlaUZ3Pw5efoGrfjtE3Q2dnJoHWaoM9FZ1cvfreD7m4L9oUZzL2X2TSH6gAAFt9JREFU
      CMpehizdmLt6cXplbJMjXLJa6TabmXP6UIIBRgd6GRoc4mJH7y2lgvCHoTDQ1oCQsZy7qtI5
      12gO503SsGLtZrbV1xAkilxjHMGAi9OHD9E9MglAwDXLoX0HuTTnvLlZAKzmc7x14Chj827c
      c2M4Nencs20zbSePcEWxZWa4l9iCWqozoaFllIq6DezYehcBn0JxYRZrNu9k06oy0CaRlhBe
      2r7uQ1H2ezEWLCW73QaApJLwelx4RR9jgxZmbRbGFQc2Yx6TfWYO2810O+N54r9/+apJ3pKi
      dN48dpj6nX9GTgIcsQxin0ukM9jF7nOj1NbU4J/qxKHE4FyU+MoXd/Cbp55BlxiHklBIlX6M
      CesI/WNzZBrimLP2404oYmd9HSpBYXGkA3P/JZweC6ahSUbGZ3n0C59DCXo48Moz+NJXsa0k
      nJ/5iUFOnz7D+OggaXWfIt9xiv3dfgwqJ3LmWh6uEvn5GxfITIli0XOb7YoTAAX8Hhejo1aC
      yoqrkZ29F8+RUVlHQpREz7kGtDmVxDv8gMzpd45TWVvLpRvd+09Ecm4F29ctYgFijIVsNEJw
      cYJgVPxVXaD00lUkzE9wYG8vWWsrALhkOkNM8RoM0SogSOuFi5TWbkav/pBQCF2ckVU1lWgu
      iytVbHyAdQVxBCQdUToDy8tyKFm5ibwkDSl5VTz62GeJdjl5Vz9JYv0Df8NXPruV9sMvc7x7
      npL8NGrv2kSyTk3hii08UF9CX5eFvt4eRixNNDV10j1ipdfST1ubibzicnTpJWxcHpZAUanU
      yAE/4YnaEG63D5VKhVYXR15BPkLAidsn450a5mSzhaLyMjSXcyiqNKSkZ5GRFM2CPfxEq1x/
      L198eDsLdhtjg0Ms3fwgX/n8A8RE3U57ZgUKV9SjnjHRarGi1mi4GvMRdNE96qaiIIOQZ5y3
      j7djnxxiqLefrpaTNI3YGeqzMGzpxnmThbGiY+NRXVNbFb+DvftOsX3X9vdUYk1MEms3rGGg
      0wQEaeuZomZpOGYs5F5gxC5QlPWuzt1HLulpywUONVpIj/JTsOUekmwzHG07jzXKiDoqFrUo
      vieWRvHZ+NmPnkSVXoBeH41K0hIXH01D0wUSs+WwSZ4+mZz8HNSpxSQmGKitzqHxbBaFFWWk
      ZBSQbogiOPcOjd1WVpVlkZRXQZG0n//706fJ0PvpHZX4yjY1//6TYxQsLSYQlMIh02klfPve
      Wp7/3W6y7w/vU+i+8A7ne2VSQl5CoSBIEB2tQyU5ERBJz8lkz779+HrVOG8Do8hrmRlsYyJk
      YHmSCzk+HUH2ERA1KA4bPk0C8dEqRDL41j99C9f0EP6mEcqqN1G6fBM282lOu9Jvuk/wtfgc
      E7zwwhvUbv80caJMMCQiywojF48wGbeU0jgJrVYD3jnsxJGgCyfeaZ9GjE0jRv1uTb2xLErQ
      i6m1h9xlS4mVQvSaWvFqDVSW5iM7pmjuGiYn08h8QMOyvASa2wapXLn0qkmeyzaBqbsfdUwq
      yypL8MwMYx60kZ2mx6NKoTg7GcfsKJ09wyRkFlKWZ2R6xEKfdY6ckkqyk7W0NzWjzyy52mqD
      vkVM7SbcQRVF5ZWkxkdhtZgYW5RI1EFsspGpqRnKy0oY7GwmzpjF7LyP4pw42k09GDMymHML
      ZOhc+PTZZOq8tF9ysqIkC0tnOz4pGrcssqqq7D2D6//IKMEAFnMbTiGBqvJC7AMNjKhXsixN
      xjrrIj/73Y1EAY+T0dlFllw+5p2fZEqOJtcQd7OSfxXX7BgLQgLxoh1TRz8yoNLEs7QsmZZu
      O/Wriuhub2MhGEVVVSXRiov+cTtL8jIRAe/iDNN2FTmZiUBEF+iOZWGkD39aEak3cYPLJ4nf
      ucD4op+89NQPP/kaIg0gwh2NTqeLmORFuLN5zxsgEhga4U5CFEXhA8pwESLcSUS6QBHuaK7b
      AHzueVobG2lsbKS104I/+MHu0cLEMMOT89e9uRIKMNzbSVNzK9MLbgh4MPf04Zcjew7+lCih
      IJf6zbR2WvBd8997HNM0NzbS2NjCgjeIb3GOtuZmRibnUQDHzCgXm1uZcdwaCyM+5yxTC25A
      YcbaT9PFi4zPXePUogQZ7umgo3sIWYGAx0FnWzNtXQPIl6tvyO/mknWKK//C9U3yZiy88OtX
      aGpt5eBrv+aXb575wDkDTUc4cnHgOncI0rD71zz96n4unDrEEz98EqvNQU//IAHZxd7nX2D8
      1vhfb3sWLrXT1O9A57Fyorn/qrXVpY4mpoI6srMziRID7HvrAHEpiZx5Zz9TE4O8dbQdQ7ya
      A3sO4b3Jw0Pn1CBPP/VTmgdmkB1jHDzdicEQy74393Fl3nKs4xStYz7kKROnTKO0nTmCLRTD
      ouUkjYNOQKH73F5e3nfuqnrJDVeCkzIreOTLj6Bx9vPtf3yZkdXJPPuTnzE67+fuz/0dhQB+
      Bz//0Q9Z9/AXmT39DLacP+OhtfmEnJMcap3mi4//A9lxEl3dFpI1fkzmHgzyGL/de5jDAxNk
      R+v54n/+K577Xz/kvv/6XZbE3mwzztuPoN+HShdDYqxC15WnjhJibHKCOTmARSVSp3cw4ZCI
      6+qmaPkafOM9iFE6OnsvsequddzsheAFh4fVddVMAgsz48SmLyE3p5hMTQPTPsjUQlr5enYh
      0n/eyrh3kcVZL6tXF5GSauc3HYOUa1RYJkPEx727APIRxgACKr0etW8RIS6Xzz/2Je5ekUd3
      1+UniSaWFSWJtJg6uNA6zYplYZcO2e/Di4heLSFIGgoKCtCK4PX6qLh7K3kxGTz+za+SpFrE
      dOEsk/H55OojQ5JPHgVBrcM9aeG8eZSE+OiwRxshcsrq2LXrPrKDwzR0jOL0Cazbug1Hz3l6
      J+fxSXFs37qBzlOHmfff3FxkF1WQog83w6DsB8IyNoISJBj2u0NSqfHNWxmc9SOF3MiBEIIg
      IAgifo+dI0fPU1pRhOxx4QuEO0E3rHF+j4OhgQEuHD5GqKAc28Xd/ObtRjQ6DcLVKVOB4qpa
      +o++xpyxnBx9eCZJE59KeayfA6ca6Wk/xw9+8GNGbFfkxbRoNX4mbV5ql2Xw+utvU15VixiZ
      hfqjYB3qo6BmC/durWPE0h/uD4dCzNsWUCQBlVqNEpVEbloCalFEq5aISTKQnBiHIIZN8m4l
      vbC4BAMe5zxy0I89oOaKkuVw+znGlWQ2129gamSUhDgVDpebmZkZDKmpFJWVMT9hZcE2jcMd
      7gRdtwuk0SWQHOPmrVdeQZeQwVcffYj4wChprQfw6XLIjosnPlVHthhPfIYRQxQYala9O5Wq
      iuHTjz7C22/t5S2zj9Vbd5FpSKCkaAkaKY6atSWY28x8etVyhN0t1C7Pv45LfIQ/DIGSFRs4
      fa6BA10iazfUsTDYyIyugsy0OBoO7UcbZ2Dd2kqmNF4O7NuPPrWE9TVldDY2sG9/LxlV60jR
      ffgv/bGJijdgEHToUoxkqXt4++29GCrXol0c5/zAIsvzczh55gS9gooNGzcT5xvhxKmDyIqK
      e3YVkxglwuI0i5pLGOPDb5NPQBYlyGDraV7Y08QX/v7r5CR8dAmxoN9Nw8FXaZzU8/VHP0WU
      KtIC/hTM911kJqWa4sTbY7zlt09jnnBRXfrxnEM/IV0gBa/bTRCJaJ32Yy2mKaEgbrcLSRON
      VqO6TaUJbz1uR5O8oKKg+pgmeRFhrAh3NB8QxgqFQsiyfL3zI0S47Ygow0W4o4lMvEe4o4k0
      gAh3NNddB5gbbeb7/+OnVDz0NR7dkcd3/+7bsOw+vve1h254Q0X28uKT32c8YQ3f/MJO1NfM
      CgX9LgaGJ8lPF/juE/v4zve/TvQnl5cIvxeFcUs7bf1jLEwMspiwjL95aCMSIbqbjmEe86DT
      xbC+fj09R1+iz5uCISWJDWtq2fP8vxGXXkhMSh5rV5V/dAWFPzIh7wIH9h9BiYol3pjL+pVl
      4RlEJYR9coCn9zTy+Jf/ksG2BpoHbei1WqrX38Vw8wlsbpnO1nbue+xx4IaxQArR0UmMjXQz
      bXHh0SeiCYVYGO/j0NEzeIRYdjywC63zEoePnkFMymPH3etRbAOM+VKJsluwzm0iP0XmrWcP
      EogN4Rwdo2Voloc/fx+y383ZQ79jXk5ix9YVnH7jJGs+s5Ppi6dwJubjNHcwryySUVZPXekN
      3B8jfAgCGcXLScsr4M3X7NRvXY0kAAE3Pf3z3P3wp/Gaj9JsmWZxLkDNlhWkx8ejU9lxhQxs
      XLGCuMTkW6byA8yP9xNMKWXXhqUcefUl5qrKSFEBrmmONg0i4gN8dPWNU7/j0yQuNPNGu5XP
      bN7JtOU8bs12StPC/mk37AIlpGYh2mc4c7GN0vKw0FAIEWN6OlO9DZxq7mfv6y8TiMsiNN1L
      t3WBrgtnic4uIEsf5JxpEAUPTQ0nkBILWLIkndh4A+nJMcjOaQLaJPrOHKdncgrT+TZcisLk
      UDfDU7P0tJzGpqSQmRx7oyRG+IhMD3WCsZS0K4FgkhZjsoaudjNdliEWHIug1eKameDcqZPM
      TNmISoxjcmyEkyfO4gne3PRfS0yiEdk2SndPF8PWMdxX4pRi0nhw1zZi1QBq0g0x9HR10Gbu
      Z3FxEUI+mtsGqFlREX4I8GFjgKgkilJ8HDnbT1lZHhCkr7WRuZCelDgdciCAw+OntHIFd9Vv
      xBDt52xjL37bIGPOIF3N53H5Q2g0RtZuqKW4KIu4BANpSTGoY7PYUF9HflLsZWM6F4sOP/Pz
      V2T44qhdt5osw8dz/Yjw+wgxODBKUUnBuwUuiGQXFpMSG018QiJJiXqWrd7MyuXVGCUfVpfI
      xo0bqF6xHNXiBAs32SXyWqSoeEqL84iKiiUpJZXY36tuIZKeV4QxQU9iYjyJCYn4nXPME0dG
      0rsd7w95s4kUlRZyzKKiMDl8qs9t5+TZVjKSNKQFQqytqeTFJ/8nYnQS922pZs5Qwz9//WHE
      oJvnfvwjOq12BEGNpIKomCQcI69wuMkI0rXGerEUleh56vvfI14dpGppOGkq9W2yVHmzCfmY
      c/hZkhTW9pkf68cXk41jaoSuKRmVKpbNS1K4eHgPlv5kgmICa5Ojeeedw/QmxiMai0m5hQZr
      ohii19SGLiGJhJKVRHttDMz6Kch9r4CvZ26MlhEnOgXW35vD4lwH2pg0tNc89q8ri6KEgsiy
      giRBIKigUYkEggoqEQJyEEkSURBRiUL4GlFCJYIcAo063FjkgB9EiZAcRK3VgBI24BBFiVBI
      Qa1REQyEl+VRZGRZCbs1iiJKMIikVkciRD8JFAU5GESSVAgCuEZbGBCWUpmhIhAIIEgqVJKI
      EgqGy1alRpJEQu8zLLx1UAjKMnJQQa1Ro7hnaRl0UFtZgKIoyLKMWq1GUUIE/OH8XTFZDCrC
      VdXviC7QHYrLNoeUmEzUrVSn/wACXi9uOUh8jP5jXRdpABHuaHQ6nfCBMYAoRtbGItw5RKJB
      I9yxCIIQkUaMcGcTaQAR7miuuw7gnO3nlRf3cUV2aOn6e4mf60Fdspqq3BQAPPZpjh46wNC0
      m/K6TWxcWYLqQ6fLnOx++gAbH/kUOo8LUaNHq75xO7QNNnN8ROLPNy2/5qifhj0HMNTVU2KM
      JxjwsuflZ1my/iGq8nW8+evd1H7mL8nUX2eXkBLCuegiWh9zi03xfdIoWHtaaLGMEfA4kVJK
      2LW5BklQsE+P0NjciU9KYPOmNYybz9E5PIs+JZeNa5ajEWG85yJjUha1xbdOOIoS9NPRdJaR
      WQ8ly1dRfI3ji+x1cvRMG/dsWU3HuTMMzThw22fJWrGNQp2NRtMQyXnlrF4WNk65vjKca46R
      cT9rN29m8+bNlOQkYbV0MzF/pUmE2Pf8k1ySDayuLuTEm29gtXtxzo5hMnUy6/AQ9Dro6e+n
      12xmZGiIvv4++oen0cfH4ZkZ4Wf/+r9paB/G73dj6e6kyzJM4Bp3uqDPibmjg6EBCx0D4yiy
      l/6eTnoGRgkqQYa6uphxei//KTLmpmO89Po+HD4v5qZm7H4Fj2OWTpOJobEZQorCSF8HfX19
      tDed4Mc/eRLz0DTuhWlMpg4mbYt/hOK62Qhkla7k/vt2kKQRyVmSgyiEgxZPHWugdO02CmLd
      jMzYOdc+zPadO5Enu5m0ewm4ptm/Zx8js46bnYn34BjvpmtOw86dW+k/dxznlS0s7lne2v0W
      p1u7ADWVa+rZtWNT2CQvO5G+oWk23HMPYx1nWfCEZztvuBI8P9HNS89OIQL3Pvr4+761Y+5y
      8ldP7GBJjELJ0jr0GgdPfO//oU0xENCk8siOCn78g19RXl1NMnYuDDmp37IW05EGkoqjsAyO
      Et3Xj7v7bRpHfGh88+Tf9Rd8fms1EOLIS//GyWGBWHka8rbQevQV3mycJCrkou7B//SB9EbF
      JxEr2jh2Wf0s6LfzzC//DwtaA45ZGw9++ZucffoHzMWupCDZz/DICH2D/Zx6YR+euGQ8sp6v
      fu0xDPpbKfTrk8ExacEaSGZdrgEBCPq9jE1NIZw9gs8L68sd+INJRGk0pEapmfY46T16lOWr
      VzN8sxP/PoTLrn9KMMDUpQHmvRAbDWhi2LLrz5l58bmr5w63niK2bD2pcXpSt9Qz0HaeGV8U
      UZpwGd+w72HMX8V/+c53+M53vsOaouT3fatCUskE/EEQQsxOTrFwqRfTkJUucxcmk4mpBQ+C
      oZCvfelRMmJFqjc/yEPbalEJYCioJjctno3ryunsWuDzX/kqf/vZLVxsar8sdeejt3uCh7/2
      TT577zrAR2drB0P9vVgGBmk2dX8wwaKWzffuoPPoXiZdAfwLIww50/jbx7/JjpWptJhHECUN
      uz73JR7adR/GzBw2FUdzwTJCd2cXPZ0dXJqx/wFFc+sy2NVNXmUlmmu6e7q4NOq37aAuV+K8
      eQKEcMSbIgjYes9xfnie/t5uBns6b7pJ3rXEZpazIkPg4DtnkXSxqK48r1RRxOuvVSWRaema
      ZNWyvMufJTKKqihP8tI/5Q5fcqMfcswOcXDvXtSAsfD9Rtgx1NeX8+xT/0qhQU1L7wzf+MZf
      syQjg4KqZSQbc8lI1BGt1yMJAqAiRq+7qv0jihI6tUBjcz/52RKvPvs80W4rZVX3X05UFPlL
      Etn97K+Idg5AzhaWFOVTJOWxJNNA1ZrltL3S+YE0x6SVsn3lEn7ceQZ1XCYGcZhnfvk0UwNW
      tj+WRVujSLReh1bUIXhsnB9yU56VTlLZMpKT0yk0JnycsviPgeJjdNpJVU3YQkj2e1HU0eSm
      xjA5Pc/CzCJphTV4LZ2MTk0yuODlrg33s3WTmlnTCU4uZtxSJnmyY4xz3TPs2FLDMZeXVEnG
      61OI0r7P3tY7h514EnUaQn43b76+m7p77kVQadFeluC57jqAd3GGlotmrkSaxqfnkxxyIhnz
      yEwKR2gqIZmBrjbGbD6WlFWSZYjDZu3DPDBBRuFS8hIUWgZmqa0sZnKwG29MJvnGKNrPmSms
      q2LW0sGMX09lcRrmdhMBTSLVVeVXrU1lt42mZjNxSQkE1Iksy0/E1NqGixhWrKhgvLuLmNwi
      jHE6QsEAXaZWcitWoQ8tcKG5m7KaOlSuCdrNAyRmFlKan0Fv21nSytaSqPbRZWojGJtNblyA
      tu5hDDkllOSn3X5TYyGZkaERjHkFREkw23OSQU0N1eky7W0mVEk5LCvOwT4xiKnPSmpOKaX5
      RgTAa5tgUo4mLzX+ZufiGhSmhnvotdqpqqklyjtOQ9cCW9ZWoigKFouFkpIS8C/SN2anID9s
      kueyjdNm7ic5u4TiXCOSKAj/H5EWxZLTtUX1AAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
